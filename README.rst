=========
coccigrep
=========

Introduction
============

coccigrep is a semantic grep for the C language based on coccinelle
(http://coccinelle.lip6.fr). It can be used to find where a given
structure is used in code files. coccigrep depends on the spatch
program which comes with coccinelle.

Usage
=====

Run `coccigrep -h` for complete options.

Examples
========

To find where in a set of files the structure named `Packet` is used, you
can run ::

    $ coccigrep  -t Packet *c
    source-af-packet.c:272:         p = ptv->in_p;
    source-af-packet.c:300:     p->datalink = ptv->datalink;
    source-af-packet.c:758:     switch(p->datalink) {

To find where in a set of files the `datalink` attribute is used in the structure
named `Packet`, you can simply do ::

    $ coccigrep  -t Packet -a datalink  *c
    source-af-packet.c:300:     p->datalink = ptv->datalink;
    source-af-packet.c:758:     switch(p->datalink) {
    source-erf-dag.c:525:     p->datalink = LINKTYPE_ETHERNET;

If you want to be more precise and find where this attribute is set, you can use 
the operation flag (-o). One of its value is `set` which indicate we only want
the match where the attribute is set ::

    $ coccigrep  -t Packet -a datalink -o set  source*c
    source-af-packet.c:300:     p->datalink = ptv->datalink;
    source-erf-dag.c:525:     p->datalink = LINKTYPE_ETHERNET;

Running coccigrep in vim
------------------------

To use coccigrep in vim, you can add to your .vimrc ::

    command! -nargs=+ -complete=tag_listfiles Coccigrep cexpr system('coccigrep -V <args>') | cw

And then you can run something like ::

    :Coccigrep -t Packet -a datalink source-*.c

The matches will appear in the `quickfix list` and the file corresponding to first
match will be opened at the corresponding line. Note that you can use completion on
structure and attribute names based on tags (generated by `make tags`).

Installation
============

To install coccigrep run ::

    sudo python ./setup.py install
